// <auto-generated />
using MedCarDomin.AppDbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedCar.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KasalikNomiKlinika", b =>
                {
                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<int>("KlinikaId")
                        .HasColumnType("int");

                    b.HasKey("KasalikNomiId", "KlinikaId");

                    b.HasIndex("KlinikaId");

                    b.ToTable("KasalikNomiKlinika");
                });

            modelBuilder.Entity("MedCarDomin.Model.Belgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KasalikNomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KasalikNomisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomisId");

                    b.ToTable("Belgilari");
                });

            modelBuilder.Entity("MedCarDomin.Model.DavoUsuli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId")
                        .IsUnique();

                    b.ToTable("DavoUsulLari");
                });

            modelBuilder.Entity("MedCarDomin.Model.DavolanishJadvali", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Malumot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId")
                        .IsUnique();

                    b.ToTable("DavolanishJadvallari");
                });

            modelBuilder.Entity("MedCarDomin.Model.KasalikNomi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KasalikNomlari");
                });

            modelBuilder.Entity("MedCarDomin.Model.KasalikSababi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId")
                        .IsUnique();

                    b.ToTable("KasalikSabablari");
                });

            modelBuilder.Entity("MedCarDomin.Model.Klinika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manzili")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KlinikaLar");
                });

            modelBuilder.Entity("MedCarDomin.Model.KutilganKasalik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId");

                    b.ToTable("KutilganKasaliklar");
                });

            modelBuilder.Entity("MedCarDomin.Model.ParhezTaom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId");

                    b.ToTable("ParhezTaomlar");
                });

            modelBuilder.Entity("MedCarDomin.Model.Sanatoriya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KasalikNomiId")
                        .HasColumnType("int");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KasalikNomiId");

                    b.ToTable("Sanatoriyalar");
                });

            modelBuilder.Entity("KasalikNomiKlinika", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", null)
                        .WithMany()
                        .HasForeignKey("KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedCarDomin.Model.Klinika", null)
                        .WithMany()
                        .HasForeignKey("KlinikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedCarDomin.Model.Belgisi", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomis")
                        .WithMany("Belgisi")
                        .HasForeignKey("KasalikNomisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomis");
                });

            modelBuilder.Entity("MedCarDomin.Model.DavoUsuli", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithOne("DavoUsuli")
                        .HasForeignKey("MedCarDomin.Model.DavoUsuli", "KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.DavolanishJadvali", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithOne("DavolanishJadvali")
                        .HasForeignKey("MedCarDomin.Model.DavolanishJadvali", "KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.KasalikSababi", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithOne("KasalikSababi")
                        .HasForeignKey("MedCarDomin.Model.KasalikSababi", "KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.KutilganKasalik", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithMany("KutilganKasalik")
                        .HasForeignKey("KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.ParhezTaom", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithMany("ParhezTaom")
                        .HasForeignKey("KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.Sanatoriya", b =>
                {
                    b.HasOne("MedCarDomin.Model.KasalikNomi", "KasalikNomi")
                        .WithMany("Sanatoriya")
                        .HasForeignKey("KasalikNomiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KasalikNomi");
                });

            modelBuilder.Entity("MedCarDomin.Model.KasalikNomi", b =>
                {
                    b.Navigation("Belgisi");

                    b.Navigation("DavoUsuli")
                        .IsRequired();

                    b.Navigation("DavolanishJadvali")
                        .IsRequired();

                    b.Navigation("KasalikSababi")
                        .IsRequired();

                    b.Navigation("KutilganKasalik");

                    b.Navigation("ParhezTaom");

                    b.Navigation("Sanatoriya");
                });
#pragma warning restore 612, 618
        }
    }
}
